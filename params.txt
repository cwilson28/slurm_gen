# ----------------------------------------------------------------------------
# The following parameters are used to describe the job you are submitting.
# For example, BATCH=<toolnames> means an instance of each tool (e.g., fastqc, # trim_galore, etc.) will be launched for each read file (or pair of read 
# files). If batch is specified, a samples file MUST be provided. This is how 
# slurm_gen will assign read files to the tools invoked.
# ----------------------------------------------------------------------------
#BATCH=fastqc,trim_galore,star
#SAMPLES_FILE=/Users/cwilson/gocode/src/slurm_gen/samples.txt

# ----------------------------------------------------------------------------
# SLURM PREAMBLE
# ----------------------------------------------------------------------------
PARTITION=dgx ;; The name of the partition where you want to run the job.
NOTIFICATION_BEGIN=true ;; Send email notification when job starts.
NOTIFICATION_END=true ;; Send email notification when job is finished.
NOTIFICATION_FAIL=true ;; Send email notification if job fails.
NOTIFICATION_EMAIL=cwilson@mdibl.org ;; Where to send notifications.

# ----------------------------------------------------------------------------
# The following parameters are specific to the cluster job you are submitting. 
# They tell the slurm resource manager how your job should be managed. These
# are required parameters. Your job may not run if they are not provided. 
# -----------------------------------------------------------------------------

JOB_NAME=fastqc ;; The name of the job you are running (e.g., trinity)
TASKS=1 ;; Run the job as a single task.
CPUS=1 ;; Run the job with n cores (i.e., cpus)
MEMORY=64 ;; Run the job with m GB of ram
TIME=24:00:00 ;; Time limit in hrs:min:sec (e.g., 24:00:00)

# ** Please note, when a tool accepts cpu and/or memory limits or requirements,
# ** those requirements should mirror what you have specified for the job.
# ** Failure to match the requirements can result in poor job performance and
# ** inaccurate statistics about your job.

# -----------------------------------------------------------------------------
# The following parameters are used to specify the path and name of the
# singularity sandbox image. A sandbox image is the equivalent of a 
# docker image, but intended to be run in a cluster environment.
# -----------------------------------------------------------------------------

SINGULARITY_PATH=/home/cwilson/compbio/docker
SINGULARITY_IMAGE=fastqc_v0_11_9.sif

# -----------------------------------------------------------------------------
# The following is optional. Uncomment to override the working directory 
# inside the singularity sandbox. If this value is not specified, it will
# initialze to whatever the default work_dir is in the original docker 
# container. In this case, all MDIBL containers will have initial working 
# directory /compbio.
# -----------------------------------------------------------------------------

#WORK_DIR=<path_to_workdir> 

# -----------------------------------------------------------------------------
# The following parameter is required and is used to control volume mounting 
# for the singularity image. By mounting a volume, you allow the singularity 
# to accesse data that is not present inside the container. The directory 
# specified here as VOLUME will be mapped to /compbio in the sinularity 
# container. All paths specified in your tool options must me relative to this
# path.
# -----------------------------------------------------------------------------

VOLUME=/home/cwilson/compbio/

# -----------------------------------------------------------------------------
# The following is required and is a declaration of the command you want to
# execute (e.g., trinity, fastqc, etc.).
# -----------------------------------------------------------------------------

COMMAND=fastqc

# -----------------------------------------------------------------------------
# Command options. These will be set and accessed internal to the docker 
# container at runtime. These options must be native in both the name and 
# format to the tool you are calling (e.g., trinity or fastqc options).
# -----------------------------------------------------------------------------

# ** Please refer to the particular tool you are calling for a complete list 
# ** of input parameters and the expected format. This literally takes the option
# ** and passes it to the tool command being called. Please make sure you include
# ** the appropriate - or -- option prefix.

OPTION=--outdir /compbio/analysis/JimCoffman/jcoffman_006.abOnly_cortisol_2018

# -----------------------------------------------------------------------------
# Command arguments. These will be set and accessed internal to the docker 
# container at runtime. Arguments must be expected by the command. Arguments  # can include input file names, etc.
# -----------------------------------------------------------------------------

ARGUMENT=/compbio/data/JimCoffman/jcoffman_006.abOnly_cortisol_2018/0AB1_S1_LALL_R1_001.fastq.gz
ARGUMENT=/compbio/data/JimCoffman/jcoffman_006.abOnly_cortisol_2018/0AB1_S1_LALL_R2_001.fastq.gz

## Next tool in the pipeline.
#JOB_NAME=trim_galore ;; The name of the job you are running (e.g., trinity)
#TASKS=1 ;; Run the job as a single task.
#CPUS=1 ;; Run the job with n cores (i.e., cpus)
#MEMORY=64 ;; Run the job with m GB of ram
#TIME=24:00:00 ;; Time limit in hrs:min:sec (e.g., 24:00:00)
#
#SINGULARITY_PATH=/home/cwilson/compbio/docker
#SINGULARITY_IMAGE=trimgalore_v0_6_5.sif
#
#VOLUME=/home/cwilson/compbio/
#
#COMMAND=trim_galore
#
#OPTION=--fastqc_args '"--noextract"'
#OPTION=--illumina
#OPTION=--paired
#OPTION=--retain_unpaired
#OPTION=--length_1 35
#OPTION=--length_2 35
#OPTION=--stringency 1
#OPTION=--length 20
#OPTION=--quality 20
#OPTION=--output_dir /compbio/analysis/JimCoffman/jcoffman_006.abOnly_cortisol_2018
#
#ARGUMENT=/compbio/data/JimCoffman/jcoffman_006.abOnly_cortisol_2018/0AB1_S1_LALL_R1_001.fastq.gz
#ARGUMENT=/compbio/data/JimCoffman/jcoffman_006.abOnly_cortisol_2018/0AB1_S1_LALL_R2_001.fastq.gz
#
## Next tool in the pipeline.
#JOB_NAME=star ;; The name of the job you are running (e.g., trinity)
#TASKS=1 ;; Run the job as a single task.
#CPUS=32 ;; Run the job with n cores (i.e., cpus)
#MEMORY=512 ;; Run the job with n GB of ram
#TIME=24:00:00 ;; Time limit in hrs:min:sec (e.g., 24:00:00)
#
#SINGULARITY_PATH=/home/cwilson/compbio/docker
#SINGULARITY_IMAGE=star_v2_7_5.sif
#
#VOLUME=/home/cwilson/compbio/
#COMMAND=STAR
#
#OPTION=--runThreadN 32
#OPTION=--limitBAMsortRAM 512000000000
#OPTION=--outSJfilterReads Unique
#OPTION=--outFilterType BySJout
#OPTION=--outSAMunmapped Within
#OPTION=--outSAMtype BAM SortedByCoordinate
#OPTION=--outBAMcompression 10
## ONLY SUPPLY THE PATH TO THE OUTPUTFILE. SLURM_GEN WILL INFER THE PREFIX FROM THE READFILE NAMES.
#OPTION=--outFileNamePrefix /compbio/analysis/ClaireMoore/cmoore_010.PRJNA449980/{%file-prefix%}
#OPTION=--quantMode TranscriptomeSAM GeneCounts
#OPTION=--quantTranscriptomeBAMcompression 10
#OPTION=--readFilesCommand zcat
#OPTION=--genomeDir /compbio/transformed/STAR-2.7.5c/ensembl/release-101/homo_sapiens-genome
## LEAVE THE ARGUMENTS TO THIS OPTION BLANK. THEY WILL BE EXTRACTED FROM THE STAR_SAMPLES_FILE.TXT
#OPTION=--readFilesIn /compbio/analysis/ClaireMoore/cmoore_010.PRJNA449980/{%readfile_1%} /compbio/analysis/ClaireMoore/cmoore_010.PRJNA449980/{%readfile_2%}
